\name{TwoHC_perm}
\alias{TwoHC_perm}
%- Also NEED an '\alias' for EACH other topic documented here.

\title{Function to assess the significance of group assignmetn from \code{\link{TwoHC_assign}}   }

\description{
This function evaluates the significance of the group assignments generated by \code{\link{TwoHC_assign}}. 
}

\usage{
TwoHC_perm(TwoHC, nperm = 1000)
}


\arguments{
  \item{TwoHC}{Output from the 'TwoHC_assign' function}
  
  \item{nperm}{The number of permutations.}
}

\details{
Significance of group assignment for each patient is calculated as follows: select a sample from the test set, examine the previously found optimal partition in each HC tree and identify two clusters to which this sample is most similar. Say these two competing clusters are \emph{cluster1} and \emph{cluster2} of size \emph{n1} and \emph{n2}, respectively. Create a binary vector (call it \emph{x}) of size \emph{n1 + n2} which has \emph{n2} ones and \emph{n1} zeros . Construct a Cox model using follow-up information of samples in \emph{cluster1} and \emph{cluster2} as response, and \emph{x} as covariate. The absolute value of coefficient expresses follow-up differences in two clusters. Indirectly may also represent the goodness of group assign for the selected patient. If the group assignment of this patients is not meaningful, then we expect this coefficient close to zero. Significance of coefficient is examined by comparing it with coefficients from the null model. The null distribution (which assumed to be uniformly distributed) in this setting can be generated by randomly permuting the follow-up information of patients in the \emph{x}. 

This function produces two outputs to show goodness of group assignments on the test,
 \itemize{
    \item Rank of each observed coefficient among the coefficients from the null model. Observed coefficient should be ranked high in order to be significant. 
    \item Relative risk ratio. In Cox model relative risk (exponentiated coefficients) multiplied by baseline hazard to obtain complete hazard. Just like the hazard ratio in the Cox model, here we calculate relative risk ratio for a test patient in following way  

%The relative risk ratio for the i_th test sample is calculated as follow
             
\deqn{risk\_ratio^i = \frac{\exp\left(-\left |\hat\beta^{i}_{obs} \right |\right)}{Z^i}}
where \deqn{Z^i = median\left(\left|\hat\beta^{i1}_{perm}\right|, \left|\hat\beta^{i2}_{perm}\right|, \left|\hat\beta^{in}_{perm}\right|\right)}

The relative risk ratio expresses how much risk is reduced due to \emph{x} compared to the original group assignment.
}
}


\value{A list object contains following objects:
  \item{Obs.betas}{A numeric vector contains the coefficient from the Cox model corresponding to each test sample.}
  \item{Perm.betas}{A matrix contains the coefficient from the Cox model trained with permuted follow-up data. Columns represent test samples, rows represent permutations}
  \item{Ranks}{A numeric vector contains the rank of each observed coefficient among the \emph{nperm} coefficients generated by permutations.}
  \item{RiskRatios}{A numeric vector contains the ratio of relative risk for the test set.}
  \item{Pvalue}{p-value of the overall group assignment.}
}


\references{
Obulkasim,A. et al., (2013). "Semi-supervised adaptive-height snipping of the Hierarchical Clustering tree, with application to genomic data", submitted.

Harrel,E.F. et al., (1982). "Evaluating the yield of medical tests", \emph{JAMA}, 247, 2543-2546.

Obulkasim,A. et al., (2011). "Stepwise classification of cancer samples using clinical and molecular data", \emph{BMC Bioinformatics}, 12, 422.
}


\author{
Askar Obulkasim
}


\seealso{
See also \code{\link{TwoHC_assign}}, \code{\link{cluster_pred}}
}


\examples{
data(TcgaGBM)
id1 <- which(TcgaGBM[["drugs"]] == "Avastin")
id2 <- which(TcgaGBM[["drugs"]] == "Temodar") 
em <- TcgaGBM[["em"]]
st <-  TcgaGBM[["surv.time"]]
event <- TcgaGBM[["status"]]
twoHC <- TwoHC_assign(X = em[ ,c(id1[1:50], id2[1:50])], index1 = 1:50, index2 = 51:100, 
                     new.X = em[, c(id1[51:60], id2[51:60])], minclus = 4,
                     surv.time = st[c(id1[1:50], id2[1:50])], 
                     status = event[c(id1[1:50], id2[1:50])])  
result <- TwoHC_perm(twoHC, nperm = 5)
                   
\dontrun{
### Examples with a larger number of permutations (not run).
result <- TwoHC_perm(twoHC, nperm = 100)
par(mfrow = c(1, 2))
plot(density(result[["Ranks"]]), xlab = "Ranks")
plot(density(result[["RiskRatios"]]), xlab = "Relative risk ratios")
}
}



