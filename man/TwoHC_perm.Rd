\name{TwoHC_perm}
\alias{TwoHC_perm}
%- Also NEED an '\alias' for EACH other topic documented here.

\title{Function to assess the significance of group assignmetn from \code{\link{TwoHC_assign}}   }

\description{
Function to evaluate the significance of the group assignments generated by \code{\link{TwoHC_assign}}. 
}

\usage{
TwoHC_perm(TwoHC, nperm = 1000)
}


\arguments{
  \item{TwoHC}{Output from the 'TwoHC_assign' function}
  
  \item{nperm}{The number of permutations.}
}

\details{
Significance of group assignment for each patient is calculated as follows: for a given patient, examine the previously found optimal partition in each HC tree and identify two clusters to which this patient is most similar. Say these two competing clusters are \emph{cluster1} and \emph{cluster2} of size \emph{n1} and \emph{n2}, respectively. Create a binary vector (call it \emph{x}) of size \emph{n1 + n2} which has \emph{n2} ones and \emph{n1} zeros . Construct a Cox model using follow-up information of samples in \emph{cluster1} and \emph{cluster2} as response, and \emph{x} as covariate. The absolute value of the estimated group parameter ('beta_obs') in the Cox model that compares the survival times of the other patients in the two competing clusters expresses the predicted gain in survival from the assignment by 'TwoHC_assign' with respect to random. The \emph{beta_obs} will be transformed to 
\deqn{r^i_{obs} = exp\left(-|\hat\beta^i_{obs}|\right),} 
which quantifies the gain in relative risk in the Cox model. The problem is that this is biased, because 'TwoHC_assign' already used 'beta_obs'. Hence, even when the two groups would be equally good for the molecular profiles in the two competing clusters, we obtain 'r_obs' < 1. To correct for this bias this function uses a permutation argument. For each new patient it applies 'nperm' permutations of the surival data among the two competing clusters. As above we compute 'r_perm' for each permutation which contains the same bias as 'r_obs'. Let Z_i = median(r_perm(1), ... , r_perm(nperm)), then risk-ratio rr_obs(i) = r_obs(i) / Z_i quantifies the biased-corrected reduction in relative risk. The permuted version 'rr_perm(i)' is defined analogously (see vignette).  Finally it defines a test statistic:
             
\deqn{{T}_{obs} = \frac{\frac{1}{n}\sum_{i=1}^{n}log\left(rr^i_{obs}\right)}{stdev\left(log\left(rr^1_{obs},\ldots,rr^n_{obs}\right)\right)}}

'T_obs' compared with the background of its null-distribution as obtained by permutation to calculate \emph{p}-value. 
}


\value{A list object contains following objects:
  \item{Obs.betas}{A numeric vector contains the coefficient from the Cox model corresponding to each test sample.}
  \item{Perm.betas}{A matrix contains the coefficient from the Cox model trained with permuted follow-up data. Columns represent test samples, rows represent permutations}
  \item{Ranks}{A numeric vector contains the rank of each observed coefficient among the \emph{nperm} coefficients generated by permutations.}
  \item{RiskRatios}{A numeric vector contains the ratio of relative risk for the test set.}
  \item{Pvalue}{\emph{p}-value of the overall group assignment.}
}


\references{
Obulkasim,A. et al., (2013). "Semi-supervised adaptive-height snipping of the Hierarchical Clustering tree", submitted.

Harrel,E.F. et al., (1982). "Evaluating the yield of medical tests", \emph{JAMA}, 247, 2543-2546.

Obulkasim,A. et al., (2011). "Stepwise classification of cancer samples using clinical and molecular data", \emph{BMC Bioinformatics}, 12, 422.
}


\author{
Askar Obulkasim
}


\seealso{
See also \code{\link{TwoHC_assign}}, \code{\link{cluster_pred}}
}


\examples{
data(TcgaGBM)
id1 <- which(TcgaGBM[["drugs"]] == "Avastin")
id2 <- which(TcgaGBM[["drugs"]] == "Temodar") 
em <- TcgaGBM[["em"]]
st <-  TcgaGBM[["surv.time"]]
event <- TcgaGBM[["status"]]
twoHC <- TwoHC_assign(X = em[ ,c(id1[1:50], id2[1:50])], index1 = 1:50, index2 = 51:100, 
                     new.X = em[, c(id1[51:60], id2[51:60])], minclus = 4,
                     surv.time = st[c(id1[1:50], id2[1:50])], 
                     status = event[c(id1[1:50], id2[1:50])])  
result <- TwoHC_perm(twoHC, nperm = 100)
                   
\dontrun{
### Examples with a larger number of permutations (not run).
result <- TwoHC_perm(twoHC, nperm = 10000)
par(mfrow = c(1, 2))
plot(density(result[["Ranks"]]), xlab = "Ranks")
plot(density(result[["RiskRatios"]]), xlab = "Observed relative risk-ratios")
}
}



